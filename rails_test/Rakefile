def run(cmd)
  puts "* running: #{cmd}"
  system cmd
  raise "ERROR running command" unless $? == 0
end

namespace :test do
  desc "run tests across various versions of Rails"
  task :rails do
    results = {}
    Dir.chdir("rails_test") do
      Dir["rails-*"].sort.reverse.each do |rails|
        rails =~ /rails-(\d+\.\d+\.\d)+-(.*)/
        version = $1
        flavor = $2
        run "./generate_test_directory #{version} #{flavor}"
        Dir.chdir rails do
          begin
            run "bundle check"
          rescue
            run "bundle install"
          end
          ENV['RAILS_ENV'] = "test"
          FileUtils.mkdir_p "log"
          begin
            unless File.exist?("db/test.sqlite3")
              run "touch db/test.sqlite3" # db:create doesn't exist before rails 2.0
              run "bundle exec rake db:migrate"
            end
            run "bundle exec rake test"
          rescue Object
            results[rails] = "FAIL"
          else
            results[rails] = "SUCCESS"
          end
        end
      end
    end
    puts "----- RESULTS -----"
    results.keys.sort.each do |key|
      puts "* #{key}: #{results[key]}"
    end
  end

  desc "Run test suite and the full Rails regression test suite"
  task :all => [:test, :"test:rails"]
end
